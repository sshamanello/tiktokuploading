import os
import time
import random
import shutil
import requests
import pickle
import os

from dotenv import load_dotenv
from selenium.webdriver.common.keys import Keys
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.keys import Keys

load_dotenv()
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
VIDEO_FOLDER = os.path.join(BASE_DIR, "VideosDirPath")
UPLOADED_FOLDER = os.path.join(BASE_DIR, "uploaded")
TITLES_FILE = os.path.join(BASE_DIR, "titles.txt")
COOKIES_FILE = os.path.join(BASE_DIR, "CookiesDir", "tiktok_session-toptrailer82.cookie")
TIKTOK_UPLOAD_URL = "https://www.tiktok.com/upload"
print(f"üìÇ BASE_DIR: {BASE_DIR}")
print(f"üéû VIDEO_FOLDER: {VIDEO_FOLDER}")

os.makedirs(UPLOADED_FOLDER, exist_ok=True)
#–û—Ç–ø—Ä–∞–≤–∫–∞ –º–µ—Å—Å–µ–¥–∂–∞ –±–æ—Ç—É
import requests

def send_telegram_message(text: str):
    bot_token = os.getenv("TELEGRAM_BOT_TOKEN")
    chat_id = os.getenv("TELEGRAM_CHAT_ID")

    if not bot_token or not chat_id:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã TELEGRAM_BOT_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID –≤ .env")
        return

    url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
    payload = {
        "chat_id": chat_id,
        "text": text,
        "parse_mode": "HTML"
    }

    try:
        requests.post(url, data=payload)
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:", e)


def remove_cookie_banner(driver):
    try:
        driver.execute_script("""
            const banner = document.querySelector('.tiktok-cookie-banner');
            if (banner) banner.remove();
        """)
        print("üßπ –ë–∞–Ω–Ω–µ—Ä cookie —É–¥–∞–ª—ë–Ω —á–µ—Ä–µ–∑ JS.")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –±–∞–Ω–Ω–µ—Ä —á–µ—Ä–µ–∑ JS: {e}")

def load_cookies(driver, path):
    driver.get("https://www.tiktok.com/")
    with open(path, "rb") as f:
        cookies = pickle.load(f)
    for cookie in cookies:
        driver.add_cookie(cookie)
    driver.refresh()

def get_video_and_title():
    videos = [f for f in os.listdir(VIDEO_FOLDER) if f.endswith((".mp4", ".mov"))]
    if not videos:
        raise Exception("–ù–µ—Ç –≤–∏–¥–µ–æ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏.")
    with open(TITLES_FILE, "r", encoding="utf-8") as f:
        titles = f.readlines()
    if not titles:
        raise Exception("–§–∞–π–ª titles.txt –ø—É—Å—Ç.")
    title = titles[0].strip()
    with open(TITLES_FILE, "w", encoding="utf-8") as f:
        f.writelines(titles[1:])
    return videos[0], title

def move_uploaded(video_filename):
    shutil.move(os.path.join(VIDEO_FOLDER, video_filename), os.path.join(UPLOADED_FOLDER, video_filename))

def upload_video():
    video_file, title = get_video_and_title()
    print(f"‚è´ –ó–∞–≥—Ä—É–∂–∞–µ–º: {video_file} | –ó–∞–≥–æ–ª–æ–≤–æ–∫: {title}")
    
    options = Options()
    options.add_argument("--start-maximized")

    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)
    wait = WebDriverWait(driver, 60)

    load_cookies(driver, COOKIES_FILE)

    driver.get(TIKTOK_UPLOAD_URL)
    remove_cookie_banner(driver)

    # –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏–µ input –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ
    upload_input = wait.until(EC.presence_of_element_located((By.XPATH, '//input[@type="file"]')))
    upload_input.send_keys(os.path.abspath(os.path.join(VIDEO_FOLDER, video_file)))
    print("üì§ –í–∏–¥–µ–æ –≤—ã–±—Ä–∞–Ω–æ.")
    wait.until(
        EC.presence_of_element_located((
            By.XPATH,
            '//span[contains(text(), "–ó–∞–≥—Ä—É–∂–µ–Ω–æ")]'
        ))
    )
    print("üì• –í–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ.")
    # –£–¥–∞–ª–µ–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞ –∫—É–∫–æ–≤ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ
    try:
        driver.execute_script("""
            let banner = document.querySelector('tiktok-cookie-banner');
            if (banner) {
                banner.remove();
            }
        """)
        print("üßπ –ë–∞–Ω–Ω–µ—Ä cookie —É–¥–∞–ª—ë–Ω —á–µ—Ä–µ–∑ JS.")
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –±–∞–Ω–Ω–µ—Ä cookie: {e}")
    # 1. –ñ–¥—ë–º –∏ –Ω–∞—Ö–æ–¥–∏–º –ø–æ–ª–µ caption (Draft.js contenteditable)
    caption = wait.until(EC.presence_of_element_located((By.XPATH, '//div[contains(@class, "public-DraftEditor-content") and @contenteditable="true"]')))

    # 2. –ö–ª–∏–∫–∞–µ–º –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    actions = ActionChains(driver)
    actions.move_to_element(caption).click().perform()
    time.sleep(1)

    # 3. –í—ã–¥–µ–ª—è–µ–º –∏ –æ—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç
    actions = ActionChains(driver)
    actions.key_down(Keys.CONTROL).send_keys("a").key_up(Keys.CONTROL).send_keys(Keys.BACKSPACE).perform()
    time.sleep(0.5)

    # 4. –í–≤–æ–¥–∏–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    actions = ActionChains(driver)
    actions.send_keys(title).perform()
    print("üìù –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤—Å—Ç–∞–≤–ª–µ–Ω.")

    # 5. –ñ–¥—ë–º –∫–Ω–æ–ø–∫—É –∏ –Ω–∞–∂–∏–º–∞–µ–º
    publish_button = wait.until(EC.element_to_be_clickable((By.XPATH, '//button[@data-e2e="post_video_button"]')))
    time.sleep(1)
    publish_button.click()
    print("‚úÖ –ö–Ω–æ–ø–∫–∞ '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å' –Ω–∞–∂–∞—Ç–∞.")
   # ‚è≥ –ü–æ–¥–æ–∂–¥–∞—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
    time.sleep(8)
    print("üîÅ –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")

    try:
        # –ü–∞—É–∑–∞ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π (TikTok –∏–Ω–æ–≥–¥–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–æ–ª—å—à–µ)
        time.sleep(2)
        move_uploaded(video_file)
        print("üìÅ –í–∏–¥–µ–æ –ø–µ—Ä–µ–º–µ—â–µ–Ω–æ –≤ –ø–∞–ø–∫—É uploaded.")
    finally:
        driver.quit()
        print("‚ùé –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç.")
        send_telegram_message(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –≤–∏–¥–µ–æ: {video_file}\nüìå –ó–∞–≥–æ–ª–æ–≤–æ–∫: {title}")


if __name__ == "__main__":
    upload_video()
