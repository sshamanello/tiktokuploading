import os
import time
import pickle
import random
import shutil

from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
COOKIES_FILE = "./CookiesDir/tiktok_session-toptrailer82.cookie"
VIDEO_FOLDER = "./VideosDirPath"
UPLOADED_FOLDER = "./uploaded"
TITLES_FILE = "titles.txt"
UPLOAD_URL = "https://www.tiktok.com/upload"

os.makedirs(UPLOADED_FOLDER, exist_ok=True)

def random_delay(base=1.0, variance=0.5):
    time.sleep(base + random.uniform(-variance, variance))

def load_cookies(driver, path):
    driver.get("https://www.tiktok.com/")
    with open(path, "rb") as f:
        cookies = pickle.load(f)
    for cookie in cookies:
        driver.add_cookie(cookie)
    driver.get(UPLOAD_URL)

def get_video_and_title():
    videos = [f for f in os.listdir(VIDEO_FOLDER) if f.endswith((".mp4", ".mov"))]
    if not videos:
        raise Exception("–ù–µ—Ç –≤–∏–¥–µ–æ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏.")
    with open(TITLES_FILE, "r", encoding="utf-8") as f:
        titles = f.readlines()
    if not titles:
        raise Exception("–§–∞–π–ª titles.txt –ø—É—Å—Ç.")
    title = titles[0].strip()
    with open(TITLES_FILE, "w", encoding="utf-8") as f:
        f.writelines(titles[1:])
    return videos[0], title

def move_uploaded(video_filename):
    shutil.move(
        os.path.join(VIDEO_FOLDER, video_filename),
        os.path.join(UPLOADED_FOLDER, video_filename)
    )

def upload_video():
    video_file, title = get_video_and_title()
    print(f"‚è´ –ó–∞–≥—Ä—É–∂–∞–µ–º: {video_file} | –ó–∞–≥–æ–ª–æ–≤–æ–∫: {title}")

    options = Options()
    options.add_argument("--start-maximized")

    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)

    load_cookies(driver, COOKIES_FILE)
    random_delay(5)

    try:
        # –ñ–¥—ë–º –ø–æ–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
        upload_input = WebDriverWait(driver, 60).until(
            EC.presence_of_element_located((By.XPATH, '//input[@type="file"]'))
        )
        upload_input.send_keys(os.path.abspath(os.path.join(VIDEO_FOLDER, video_file)))
        print("üì§ –í–∏–¥–µ–æ –≤—ã–±—Ä–∞–Ω–æ.")
    except Exception as e:
        print(f"[!] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –≤–∏–¥–µ–æ: {e}")
        driver.quit()
        return

    random_delay(10)

    try:
        caption_area = WebDriverWait(driver, 30).until(
            EC.presence_of_element_located((By.XPATH, '//div[@data-e2e="caption-container"]//div[@role="textbox"]'))
        )
        caption_area.click()
        random_delay(1)
        caption_area.send_keys(Keys.CONTROL + "a")
        caption_area.send_keys(Keys.BACKSPACE)
        caption_area.send_keys(title)
        print("üìù –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤—Å—Ç–∞–≤–ª–µ–Ω.")
    except Exception as e:
        print(f"[!] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞: {e}")
        driver.quit()
        return

    input("üü¢ –ü—Ä–æ–≤–µ—Ä—å –≤—Å—ë –≤—Ä—É—á–Ω—É—é. –ù–∞–∂–º–∏ Enter ‚Äî –∏ –≤–∏–¥–µ–æ –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ...")

    try:
        publish_button = WebDriverWait(driver, 30).until(
            EC.element_to_be_clickable((By.XPATH, '//button[contains(@data-e2e, "upload-post")]'))
        )
        publish_button.click()
        print("‚úÖ –í–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
    except Exception as e:
        print(f"[‚úñ] –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å': {e}")

    random_delay(5)
    driver.quit()
    move_uploaded(video_file)
    print("üìÅ –í–∏–¥–µ–æ –ø–µ—Ä–µ–º–µ—â–µ–Ω–æ –≤ –ø–∞–ø–∫—É uploaded.")

if __name__ == "__main__":
    upload_video()
