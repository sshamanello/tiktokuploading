import os
import requests
import time
from dotenv import load_dotenv
import undetected_chromedriver as uc
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def test_proxy_requests():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–∫—Å–∏ —á–µ—Ä–µ–∑ requests"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∫—Å–∏ —á–µ—Ä–µ–∑ requests...")
    
    proxy = os.getenv("PROXY")
    proxy_user = os.getenv("PROXY_USER")
    proxy_pass = os.getenv("PROXY_PASS")
    
    if not all([proxy, proxy_user, proxy_pass]):
        print("‚ùå –ü—Ä–æ–∫—Å–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return False
    
    proxies = {
        "http": f"http://{proxy_user}:{proxy_pass}@{proxy}",
        "https": f"http://{proxy_user}:{proxy_pass}@{proxy}"
    }
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ—Ä–≤–∏—Å–æ–≤
        services = [
            "https://api.ipify.org",
            "https://ipinfo.io/ip",
            "https://icanhazip.com"
        ]
        
        for service in services:
            try:
                response = requests.get(service, proxies=proxies, timeout=10)
                ip = response.text.strip()
                print(f"‚úÖ {service}: {ip}")
            except Exception as e:
                print(f"‚ùå {service}: {e}")
                
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∫—Å–∏: {e}")
        return False

def test_proxy_browser():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–∫—Å–∏ —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä"""
    print("\nüåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∫—Å–∏ —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä...")
    
    try:
        from proxy_manager import ProxyManager
        
        manager = ProxyManager()
        
        if not manager.is_configured():
            print("‚ùå –ü—Ä–æ–∫—Å–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
            return False
        
        # –ü–æ–ª—É—á–∞–µ–º Chrome options —Å –ø—Ä–æ–∫—Å–∏
        options = manager.get_enhanced_chrome_options()
        options.add_argument("--headless")  # –ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
        
        driver = uc.Chrome(options=options)
        
        # –°–∫—Ä—ã–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é
        driver.execute_script("Object.defineProperty(navigator, 'webdriver', {get: () => undefined})")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º IP
        services = [
            "https://api.ipify.org",
            "https://ipinfo.io/ip",
            "https://icanhazip.com"
        ]
        
        for service in services:
            try:
                driver.get(service)
                time.sleep(3)
                ip = driver.find_element(By.TAG_NAME, "body").text.strip()
                print(f"‚úÖ {service}: {ip}")
            except Exception as e:
                print(f"‚ùå {service}: {e}")
        
        driver.quit()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±—Ä–∞—É–∑–µ—Ä–∞: {e}")
        return False

def check_env_file():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞ –∏ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ"""
    print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞...")
    
    if not os.path.exists(".env"):
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("üìù –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏:")
        print("PROXY=host:port")
        print("PROXY_USER=username")
        print("PROXY_PASS=password")
        print("PROXY_TYPE=http (–∏–ª–∏ socks5)")
        return False
    
    required_vars = ["PROXY", "PROXY_USER", "PROXY_PASS"]
    missing_vars = []
    
    for var in required_vars:
        if not os.getenv(var):
            missing_vars.append(var)
    
    if missing_vars:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {', '.join(missing_vars)}")
        return False
    
    print("‚úÖ .env —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    return True

if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∫—Å–∏...\n")
    
    if not check_env_file():
        exit(1)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–∫—Å–∏ —á–µ—Ä–µ–∑ requests
    requests_ok = test_proxy_requests()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–∫—Å–∏ —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä
    browser_ok = test_proxy_browser()
    
    print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"Requests: {'‚úÖ' if requests_ok else '‚ùå'}")
    print(f"Browser: {'‚úÖ' if browser_ok else '‚ùå'}")
    
    if requests_ok and browser_ok:
        print("\nüéâ –ü—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("\n‚ö†Ô∏è –ü—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç —á–∞—Å—Ç–∏—á–Ω–æ –∏–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏ –≤ .env —Ñ–∞–π–ª–µ") 